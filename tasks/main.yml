---

- name: add users | create users, shell, home dirs
  user:
    name: "{{ item.username }}"
    uid: "{{ item.uid | default(omit, True) }}"
    password: "{{ item.password if item.password is defined else '!' }}"
    update_password: "{{ item.update_password if item.update_password is defined else default_update_password }}"
    groups: "{{ item.groups | default(omit) }}"
    shell: "{{ item.shell if item.shell is defined else default_shell }}"
    createhome: true
    comment: "{{ item.comment if item.comment is defined else '' }}"
    # hard-coded in case user sets state of absent.
    # Choice made to never delete accounts!
    state: "{{ item.user_state }}"
  when:
    - item.user_state == 'present' or item.user_state == 'lock'
  with_items:
    - "{{ users }}"
  loop_control:
    label: "username: {{ item.username }},
      user_state: {{ item.user_state if item.user_state is defined else 'lock' }},
      password: {{ 'True' if item.password is defined else 'False' }},
      update_password: {{ item.update_password if item.update_password is defined else default_update_password }},
      groups: {{ item.groups if item.groups is defined else ''}}"  # noqa 204

# unlock account if locked
- name: add users | unlock password login
  user:
    name: "{{ item.username }}"
    expires: -1
  when: item.user_state == 'present'
  with_items:
    - "{{ users }}"
  loop_control:
    label: "username: {{ item.username }}, user_state: {{ item.user_state | default('lock', true) }}"

# lock account if not locked
- name: lock users | lock password & ssh key authentication
  user:
    name: "{{ item.username }}"
    expires: 0
  when: item.user_state == 'lock'
  with_items:
    - "{{ users }}"
  loop_control:
    label: "username: {{ item.username }}, user_state: {{ item.user_state | default('lock', true) }}"

# remove account
- name: remove users
  user:
    name: "{{ item.username }}"
    state: absent
  when: item.user_state == 'absent'
  with_items:
    - "{{ users }}"
  loop_control:
    label: "username: {{ item.username }}, user_state: {{ item.user_state | default('lock', true) }}"

- name: remove home directory
  file:
    path: "/home/{{ item.username }}"
    state: absent
  when: item.user_state == 'absent'
  with_items:
    - "{{ users }}"
  loop_control:
    label: "username: {{ item.username }}, user_state: {{ item.user_state | default('lock', true) }}"

- name: ssh keys | add authorized key for ssh key authentication
  authorized_key:
    user: "{{ item.username }}"
    key: "{{ item.ssh_key }}"
    exclusive: "{{ item.exclusive_ssh_key if item.exclusive_ssh_key is defined else 'no' }}"
    state: "{{ item.user_state | default('present', true) }}"
  when: item.ssh_key is defined
  with_items:
    - "{{ users }}"
  loop_control:
    label: "username: {{ item.username }},
      ssh_key: {{ 'True' if item.ssh_key is defined else 'False' }},
      exclusive_ssh_key: {{ item.exclusive_ssh_key if item.exclusive_ssh_key is defined else 'False' }},
      user_state: {{ item.user_state | default('lock', true) }}"  # noqa 204

- name: sudo | add to sudoers file and validate
  lineinfile:
    dest: /etc/sudoers
    state: "{{ item.user_state | default('present', true) }}"
    regexp: '^{{ item.username }} '
    line: "{{ item.username }} ALL=(ALL) {{ 'NOPASSWD:' if ( item.use_sudo_nopass | default(false) )  else '' }}ALL"
    validate: 'visudo -cf %s'
  environment:
    PATH: /usr/sbin:/usr/local/sbin:/sbin
  when: item.use_sudo | default(false)
  with_items:
    - "{{ users }}"
  loop_control:
    label: "username: {{ item.username }},
      use_sudo: {{ item.use_sudo|default(false) }},
      use_sudo_nopass: {{ item.use_sudo_nopass | default(false) }}"

- name: sudo | remove from sudoers file and validate
  lineinfile:
    dest: /etc/sudoers
    state: absent
    regexp: '^{{ item.username }} '
    line: '{{ item.username }}'
    validate: 'visudo -cf %s'
  environment:
    PATH: /usr/sbin:/usr/local/sbin:/sbin
  when: not item.use_sudo | default(false)
  with_items:
    - "{{ users }}"
  loop_control:
    label: "username: {{ item.username }}, use_sudo: {{ item.use_sudo | default(false) }}"
